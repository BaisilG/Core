namespace Tests.Patterns

open System;
open Stringier.Patterns;
open Xunit;

module StringierTests =
    [<Fact>]
    let ``Equals('a', 'a')`` () =
        Assert.True(Stringier.Equals('a', 'a'))

    [<Fact>]
    let ``Equals('a', 'A')`` () =
        Assert.False(Stringier.Equals('a', 'A'))

    [<Fact>]
    let ``Equals('a', 'a', true)`` () =
        Assert.True(Stringier.Equals('a', 'a', true))

    [<Fact>]
    let ``Equals('a', 'a', false)`` () =
        Assert.True(Stringier.Equals('a', 'a', false))

    [<Fact>]
    let ``Equals('a', 'A', true)`` () =
        Assert.False(Stringier.Equals('a', 'A', true))

    [<Fact>]
    let ``Equals('a', 'A', false)`` () =
        Assert.True(Stringier.Equals('a', 'A', false))

    [<Fact>]
    let ``Equals('a', 0x61)`` () =
        Assert.True(Stringier.Equals('a', 0x61us))

    [<Fact>]
    let ``Equals('a', 0x41)`` () =
        Assert.False(Stringier.Equals('a', 0x41us))

    [<Fact>]
    let ``Equals('a', 0x61, true)`` () =
        Assert.True(Stringier.Equals('a', 0x61us, true))

    [<Fact>]
    let ``Equals('a', 0x61, false)`` () =
        Assert.True(Stringier.Equals('a', 0x61us, false))

    [<Fact>]
    let ``Equals('a', 0x41, true)`` () =
        Assert.False(Stringier.Equals('a', 0x41us, true))

    [<Fact>]
    let ``Equals('a', 0x41, false)`` () =
        Assert.True(Stringier.Equals('a', 0x41us, false))

    [<Fact>]
    let ``Equals(0x61, 'a')`` () =
        Assert.True(Stringier.Equals(0x61us, 'a'))

    [<Fact>]
    let ``Equals(0x61, 'A')`` () =
        Assert.False(Stringier.Equals(0x61us, 'A'))

    [<Fact>]
    let ``Equals(0x61, 'a', true)`` () =
        Assert.True(Stringier.Equals(0x61us, 'a', true))

    [<Fact>]
    let ``Equals(0x61, 'a', false)`` () =
        Assert.True(Stringier.Equals(0x61us, 'a', false))

    [<Fact>]
    let ``Equals(0x61, 'A', true)`` () =
        Assert.False(Stringier.Equals(0x61us, 'A', true))

    [<Fact>]
    let ``Equals(0x61, 'A', false)`` () =
        Assert.True(Stringier.Equals(0x61us, 'A', false))

    [<Fact>]
    let ``Equals(0x61, 0x61)`` () =
        Assert.True(Stringier.Equals(0x61us, 0x61us))

    [<Fact>]
    let ``Equals(0x61, 0x41)`` () =
        Assert.False(Stringier.Equals(0x61us, 0x41us))

    [<Fact>]
    let ``Equals(0x61, 0x61, true)`` () =
        Assert.True(Stringier.Equals(0x61us, 0x61us, true))

    [<Fact>]
    let ``Equals(0x61, 0x61, false)`` () =
        Assert.True(Stringier.Equals(0x61us, 0x61us, false))

    [<Fact>]
    let ``Equals(0x61, 0x41, true)`` () =
        Assert.False(Stringier.Equals(0x61us, 0x41us, true))

    [<Fact>]
    let ``Equals(0x61, 0x41, false)`` () =
        Assert.True(Stringier.Equals(0x61us, 0x41us, false))

    [<Fact>]
    let ``Equals("abcdefgh", "abcdefgh")`` () =
        Assert.True(Stringier.Equals("abcdefgh", "abcdefgh"))

    [<Fact>]
    let ``Equals("abcdefgh", "ABCDEFGH")`` () =
        Assert.False(Stringier.Equals("abcdefgh", "ABCDEFGH"))

    [<Fact>]
    let ``Equals("abcdefgh", "abcdefgh", true)`` () =
        Assert.True(Stringier.Equals("abcdefgh", "abcdefgh", true))

    [<Fact>]
    let ``Equals("abcdefgh", "abcdefgh", false)`` () =
        Assert.True(Stringier.Equals("abcdefgh", "abcdefgh", false))

    [<Fact>]
    let ``Equals("abcdefgh", "ABCDEFGH", true)`` () =
        Assert.False(Stringier.Equals("abcdefgh", "ABCDEFGH", true))

    [<Fact>]
    let ``Equals("abcdefgh", "ABCDEFGH", false)`` () =
        Assert.True(Stringier.Equals("abcdefgh", "ABCDEFGH", false))

    [<Fact>]
    let ``Equals("abcdefgh", [|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|])`` () =
        Assert.True(Stringier.Equals("abcdefgh", [|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|]))

    [<Fact>]
    let ``Equals("abcdefgh", [|0x41;0x42;0x43;0x44;0x45;0x46;0x47;0x48|])`` () =
        Assert.False(Stringier.Equals("abcdefgh", [|0x41us;0x42us;0x43us;0x44us;0x45us;0x46us;0x47us;0x48us|]))

    [<Fact>]
    let ``Equals("abcdefgh", [|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], true)`` () =
        Assert.True(Stringier.Equals("abcdefgh", [|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], true))

    [<Fact>]
    let ``Equals("abcdefgh", [|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], false)`` () =
        Assert.True(Stringier.Equals("abcdefgh", [|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], false))

    [<Fact>]
    let ``Equals("abcdefgh", [|0x41;0x42;0x43;0x44;0x45;0x46;0x47;0x48|], true)`` () =
        Assert.False(Stringier.Equals("abcdefgh", [|0x41us;0x42us;0x43us;0x44us;0x45us;0x46us;0x47us;0x48us|], true))

    [<Fact>]
    let ``Equals("abcdefgh", [|0x41;0x42;0x43;0x44;0x45;0x46;0x47;0x48|], false)`` () =
        Assert.True(Stringier.Equals("abcdefgh", [|0x41us;0x42us;0x43us;0x44us;0x45us;0x46us;0x47us;0x48us|], false))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], "abcdefgh")`` () =
        Assert.True(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], "abcdefgh"))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], "ABCDEFGH")`` () =
        Assert.False(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], "ABCDEFGH"))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], "abcdefgh", true)`` () =
        Assert.True(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], "abcdefgh", true))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], "abcdefgh", false)`` () =
        Assert.True(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], "abcdefgh", false))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], "ABCDEFGH", true)`` () =
        Assert.False(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], "ABCDEFGH", true))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], "ABCDEFGH", false)`` () =
        Assert.True(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], "ABCDEFGH", false))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], [|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|])`` () =
        Assert.True(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], [|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|]))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], [|0x41;0x42;0x43;0x44;0x45;0x46;0x47;0x48|])`` () =
        Assert.False(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], [|0x41us;0x42us;0x43us;0x44us;0x45us;0x46us;0x47us;0x48us|]))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], [|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], true)`` () =
        Assert.True(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], [|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], true))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], [|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], false)`` () =
        Assert.True(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], [|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], false))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], [|0x41;0x42;0x43;0x44;0x45;0x46;0x47;0x48|], true)`` () =
        Assert.False(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], [|0x41us;0x42us;0x43us;0x44us;0x45us;0x46us;0x47us;0x48us|], true))

    [<Fact>]
    let ``Equals([|0x61;0x62;0x63;0x64;0x65;0x66;0x67;0x68|], [|0x41;0x42;0x43;0x44;0x45;0x46;0x47;0x48|], false)`` () =
        Assert.True(Stringier.Equals([|0x61us;0x62us;0x63us;0x64us;0x65us;0x66us;0x67us;0x68us|], [|0x41us;0x42us;0x43us;0x44us;0x45us;0x46us;0x47us;0x48us|], false))
